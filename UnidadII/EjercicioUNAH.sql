--1. Mostrar el listado de los estudiantes con la siguiente 
-- información (Para los cruces utilizar productos
--cartesianos y el operador (+)):
--a. Nombre completo con cada inicial en mayúscula.
--b. Campus actual.
--c. Lugar de nacimiento.
--d. Lugar de residencia.
--e. Cantidad de carreras que tiene matriculadas.
--f. Porcentaje de asignaturas aprobadas (Total de asignaturas
--aprobadas/Total de asignaturas de
--todas sus carreras).
--g. Promedio de todas las carreras matriculadas (Utilizar campo 
--PROMEDIO_CARRERA).

SELECT COUNT(*) FROM TBL_ALUMNOS;

WITH CARRERAS AS (
    SELECT CODIGO_ALUMNO, COUNT(*) CANTIDAD_CARRERAS
    FROM TBL_CARRERAS_X_ALUMNOS
    GROUP BY CODIGO_ALUMNO
),
PORCENTAJES_CLASES_APROBADAS AS (
    SELECT  A.CODIGO_ALUMNO, 
            ROUND(AVG(PROMEDIO_CARRERA), 2) || '%' AS PROMEDIOS_CARRERAS,
            ROUND((SUM(A.CANTIDAD_CLASES_APROBADAS) /
            SUM(B.CANTIDAD_ASIGNATURAS)) *100, 2) || '%' AS PORCENTAJE_CLASES_APROBADAS 
    FROM    TBL_CARRERAS_X_ALUMNOS A,
            TBL_cARRERAS B
    WHERE A.CODIGO_CARRERA = B.CODIGO_CARRERA
    GROUP BY A.CODIGO_ALUMNO
)
SELECT A.NUMERO_CUENTA, 
        INITCAP(B.NOMBRE || ' ' || B.APELLIDO) AS NOMBRE_COMPLETO,
        C.NOMBRE_CAMPUS,
        D.NOMBRE_LUGAR AS LUGAR_NACIMIENTO,
        E.NOMBRE_LUGAR AS LUGAR_RESIDENCIA,
        NVL(F.CANTIDAD_CARRERAS,0) AS CANTIDAD_CARRERAS,
        NVL(G.PORCENTAJE_CLASES_APROBADAS, 0) AS PORCENTAJE_CLASES_APROBADAS,
        NVL(G.PROMEDIOS_CARRERAS, 0) AS PROMEDIOS_CARRERAS
FROM    TBL_ALUMNOS A,
        TBL_PERSONAS B,
        TBL_CAMPUS C,
        TBL_LUGARES D,
        TBL_LUGARES E,
        CARRERAS F,
        PORCENTAJES_CLASES_APROBADAS G
WHERE   A.CODIGO_ALUMNO = B.CODIGO_PERSONA
AND     B.CODIGO_CAMPUS = C.CODIGO_CAMPUS
AND     B.CODIGO_LUGAR_NACIMIENTO = D.CODIGO_LUGAR
AND     B.CODIGO_LUGAR_RESIDENCIA = E.CODIGO_LUGAR
AND     A.CODIGO_ALUMNO = F.CODIGO_ALUMNO (+)
AND     A.CODIGO_ALUMNO = G.CODIGO_ALUMNO (+);


SELECT AVG(PROMEDIO_CARRERA)
FROM TBL_CARRERAS_X_ALUMNOS;



SELECT  A.CODIGO_ALUMNO,
        ROUND(AVG(PROMEDIO_CARRERA), 2) || '%' AS PROMEDIOS_CARRERAS,
        ROUND((SUM(A.CANTIDAD_CLASES_APROBADAS) /
        SUM(B.CANTIDAD_ASIGNATURAS)) *100, 2) || '%' AS PORCENTAJE_CLASES_APROBADAS 
FROM    TBL_CARRERAS_X_ALUMNOS A,
        TBL_cARRERAS B
WHERE A.CODIGO_CARRERA = B.CODIGO_CARRERA
GROUP BY A.CODIGO_ALUMNO;

SELECT * FROM TBL_cARRERAS;

SELECT 50 + 56 + 52 FROM DUAL; --158

SELECT 33*3 FROM DUAL; --99

SELECT 99/158 FROM DUAL; --62%

--Mostrar los alumnos con excelencia académica (Cum Laude >= 80) 
--para cada carrera, puede darse el caso
--de que un estudiante tenga más de una carrera y en ambas 
--sea excelencia académica. Para este ejercicio
--NO utilizar el campo PROMEDIO_CARRERA de la tabla 
--TBL_CARRERA_X_ALUMNOS, en su lugar hacer
--el cálculo del historial académico. Información a mostrar:
--a. Nombre completo con cada inicial en mayúscula.
--b. Número de cuenta.
--c. Carrera
--d. Promedio para dicha carrera: Sumatoria de las UV * 
--Promedio por asignatura/Sumatoria del total
--de UV por carrera.
--Ejemplo del cálculo del promedio:

WITH PROMEDIOS_CARRERAS AS (
    SELECT  A.CODIGO_ALUMNO,
            C.CODIGO_CARRERA,
            SUM(C.CANTIDAD_UNIDADES_VALORATIVAS * A.PROMEDIO) /
            SUM(C.CANTIDAD_UNIDADES_VALORATIVAS) AS PROMEDIO
    FROM TBL_HISTORIAL A
    INNER JOIN TBL_SECCION B
    ON (A.CODIGO_SECCION = B.CODIGO_SECCION)
    INNER JOIN TBL_ASIGNATURAS C
    ON (B.CODIGO_ASIGNATURA = C.CODIGO_ASIGNATURA)
    GROUP BY A.CODIGO_ALUMNO,
            C.CODIGO_CARRERA
    ORDER BY A.CODIGO_ALUMNO
)
SELECT INITCAP(B.NOMBRE ||' '|| B.APELLIDO) AS NOMBRE,
        A.NUMERO_CUENTA,
        D.NOMBRE_CARRERA,
        NVL(E.PROMEDIO, 0) PROMEDIO
FROM TBL_ALUMNOS A
INNER JOIN TBL_PERSONAS B
ON (A.CODIGO_ALUMNO = B.CODIGO_PERSONA)
LEFT JOIN TBL_CARRERAS_x_ALUMNOS C
ON (A.CODIGO_ALUMNO = C.CODIGO_ALUMNO)
LEFT JOIN TBL_CARRERAS D
ON (C.CODIGO_CARRERA = D.CODIGO_CARRERA)
LEFT JOIN PROMEDIOS_CARRERAS E
ON (C.CODIGO_CARRERA = E.CODIGO_CARRERA AND A.CODIGO_ALUMNO = E.CODIGO_ALUMNO);

--3. Basado en el promedio calculado del inciso anterior, 
-- mostrar el estudiante con mayor promedio(ñoñ@) y el
--estudiante con menor promedio.

WITH PROMEDIOS_CARRERAS AS (
    SELECT  A.CODIGO_ALUMNO,
            C.CODIGO_CARRERA,
            SUM(C.CANTIDAD_UNIDADES_VALORATIVAS * A.PROMEDIO) /
            SUM(C.CANTIDAD_UNIDADES_VALORATIVAS) AS PROMEDIO
    FROM TBL_HISTORIAL A
    INNER JOIN TBL_SECCION B
    ON (A.CODIGO_SECCION = B.CODIGO_SECCION)
    INNER JOIN TBL_ASIGNATURAS C
    ON (B.CODIGO_ASIGNATURA = C.CODIGO_ASIGNATURA)
    GROUP BY A.CODIGO_ALUMNO,
            C.CODIGO_CARRERA
    ORDER BY A.CODIGO_ALUMNO
),
ALUMNOS_PROMEDIOS AS (
    SELECT INITCAP(B.NOMBRE ||' '|| B.APELLIDO) AS NOMBRE,
            A.NUMERO_CUENTA,
            D.NOMBRE_CARRERA,
            NVL(E.PROMEDIO, 0) PROMEDIO
    FROM TBL_ALUMNOS A
    INNER JOIN TBL_PERSONAS B
    ON (A.CODIGO_ALUMNO = B.CODIGO_PERSONA)
    LEFT JOIN TBL_CARRERAS_x_ALUMNOS C
    ON (A.CODIGO_ALUMNO = C.CODIGO_ALUMNO)
    LEFT JOIN TBL_CARRERAS D
    ON (C.CODIGO_CARRERA = D.CODIGO_CARRERA)
    LEFT JOIN PROMEDIOS_CARRERAS E
    ON (C.CODIGO_CARRERA = E.CODIGO_CARRERA AND A.CODIGO_ALUMNO = E.CODIGO_ALUMNO)
)
SELECT DISTINCT NOMBRE
FROM ALUMNOS_PROMEDIOS
WHERE PROMEDIO = (SELECT MAX(PROMEDIO) FROM ALUMNOS_PROMEDIOS)
OR PROMEDIO = (SELECT MIN(PROMEDIO) FROM ALUMNOS_PROMEDIOS WHERE PROMEDIO <> 0);





SELECT  A.CODIGO_ALUMNO,
        C.CODIGO_CARRERA,
        SUM(C.CANTIDAD_UNIDADES_VALORATIVAS * A.PROMEDIO) /
        SUM(C.CANTIDAD_UNIDADES_VALORATIVAS) AS PROMEDIO
FROM TBL_HISTORIAL A
INNER JOIN TBL_SECCION B
ON (A.CODIGO_SECCION = B.CODIGO_SECCION)
INNER JOIN TBL_ASIGNATURAS C
ON (B.CODIGO_ASIGNATURA = C.CODIGO_ASIGNATURA)
GROUP BY A.CODIGO_ALUMNO,
        C.CODIGO_CARRERA
ORDER BY A.CODIGO_ALUMNO;

2,1,72.5
2,3,65
SELECT * 
FROM TBL_HISTORIAL;


